package com.coresmore.xfosd;import java.math.BigDecimal;import com.coresmore.xfosd.libs.data.BleDevice;import com.coresmore.xfosd.utils.DataModule;import com.coresmore.xfosd.utils.Utlis;import com.coresmore.xfosd.view.DragView;import com.coresmore.xfosd.view.Item_Dialog;import android.annotation.SuppressLint;import android.app.Fragment;import android.os.Build;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;@SuppressLint("NewApi")public class Fragment_2 extends Fragment {    private static final String TAP = "XFFragment_2";    private static final int MSG_AN = 1;    private static final int MSG_Delay = 300;    private static final int MSG_MS = 2;    private static final int MSG_MSDL = 3;    private byte bt_bl;    private byte bt_br;    private byte bt_ll;    private byte bt_lr;    private Item_Dialog dialog;    private DragView drag;    /** 四个值ms 0-10 */    private float fl_bl, fl_br, fl_ll, fl_lr;    private TextView tv_bl_an;    private TextView tv_bl_cm;    private TextView tv_bl_ms;    private TextView tv_bl_name;    private TextView tv_br_an;    private TextView tv_br_cm;    private TextView tv_br_ms;    private TextView tv_br_name;    private TextView tv_ll_an;    private TextView tv_ll_cm;    private TextView tv_ll_ms;    private TextView tv_ll_name;    private TextView tv_lr_an;    private TextView tv_lr_cm;    private TextView tv_lr_ms;    private TextView tv_lr_name;    private TextView tv_p2_topLeft;    private TextView tv_p2_topRight;    private ImageView img_custom;    private int progress0;    private int progress1;    private int progress2;    private int progress3;    private View rootView;    private Toast mToast = null;    private BleDevice mBleDevice;    private DataModule dataModule;    private MainPager mainActivity;    public void setData(BleDevice mBleDevice, DataModule dataModule) {        this.mBleDevice = mBleDevice;        this.dataModule = dataModule;        if (drag != null) {            drag.setEnabled(null == mBleDevice ? false : true);        }    }        public void getBleData(){        if ((mainActivity.type2_1) > 0) {//相位设置//            mainActivity.data2_1[0] == 1 : tv_bl_an.setText(R.string.str_180) ? tv_bl_an.setText(R.string.str_0);             tv_bl_an.setText(mainActivity.data2_1[0] == 1 ? R.string.str_180 : R.string.str_0);            tv_br_an.setText(mainActivity.data2_1[1] == 1 ? R.string.str_180 : R.string.str_0);            tv_ll_an.setText(mainActivity.data2_1[2] == 1 ? R.string.str_180 : R.string.str_0);            tv_lr_an.setText(mainActivity.data2_1[3] == 1 ? R.string.str_180 : R.string.str_0);            mainActivity.type2_1 = 0;        }        if ((mainActivity.type2_2) > 0) {//延时设置            fl_bl = (float) (mainActivity.data2_2[0]*0.05);            fl_br = (float) (mainActivity.data2_2[1]*0.05);            fl_lr = (float) (mainActivity.data2_2[2]*0.05);            fl_ll = (float) (mainActivity.data2_2[3]*0.05);                        tv_bl_ms.setText(getString(R.string.str_ms, fl_bl));            tv_br_ms.setText(getString(R.string.str_ms, fl_br));            tv_ll_ms.setText(getString(R.string.str_ms, fl_ll));            tv_lr_ms.setText(getString(R.string.str_ms, fl_lr));                        tv_bl_cm.setText(getString(R.string.str_cm, fl_bl * 34.6F));            tv_br_cm.setText(getString(R.string.str_cm, fl_br * 34.6F));            tv_ll_cm.setText(getString(R.string.str_cm, fl_ll * 34.6F));            tv_lr_cm.setText(getString(R.string.str_cm, fl_lr * 34.6F));                        mainActivity.type2_2 = 0;        }            }    private Handler mHandler = new Handler() {        public void handleMessage(Message msg) {            if (mBleDevice == null) {                toastOne(getString(R.string.str_main_disconnect));                return;            }            switch (msg.what) {            case MSG_AN:                byte[] arrayOfByte = new byte[8];                arrayOfByte[0] = 69;                arrayOfByte[1] = 8;                arrayOfByte[2] = bt_bl;                arrayOfByte[3] = bt_br;                arrayOfByte[4] = bt_ll;                arrayOfByte[5] = bt_lr;                dataModule.bleWriteToString(Utlis.getCheckByte(arrayOfByte), mBleDevice);                break;            case MSG_MS:                int v1 = new BigDecimal(fl_bl / 10.0F * 200.0F).setScale(0, 4).byteValue();                int v2 = new BigDecimal(fl_br / 10.0F * 200.0F).setScale(0, 4).byteValue();                int v3 = new BigDecimal(fl_ll / 10.0F * 200.0F).setScale(0, 4).byteValue();                int v4 = new BigDecimal(fl_lr / 10.0F * 200.0F).setScale(0, 4).byteValue();                                dataModule.bleWriteToString(                        Utlis.getCheckByte(new byte[] { 0x45, 0x09, (byte) v1, (byte) v2, (byte) v3, (byte) v4 ,0,0}),                        mBleDevice);                progress0 = v1;                progress1 = v2;                                progress2 = v3;                progress3 = v4;                break;            case MSG_MSDL:                dataModule.bleWriteToString(                        Utlis.getCheckByte(                                new byte[] { 69, 9, (byte) progress0, (byte) progress1,                                        (byte) progress2, (byte) progress3,0,0 }),                        mBleDevice);                break;            }        }    };    private View.OnClickListener anClickListener = new View.OnClickListener() {        public void onClick(View paramAnonymousView) {            if (mBleDevice == null) {                toastOne(getString(R.string.str_main_disconnect));                return;            }            switch (paramAnonymousView.getId()) {            case R.id.tv_bl_an:                if (tv_bl_an.getText().equals(getString(R.string.str_0))) {                    tv_bl_an.setText(R.string.str_180);                    bt_bl = 1;                } else {                    tv_bl_an.setText(R.string.str_0);                    bt_bl = 0;                }                break;            case R.id.tv_br_an:                if (tv_br_an.getText().equals(getString(R.string.str_0))) {                    tv_br_an.setText(R.string.str_180);                    bt_br = 1;                } else {                    tv_br_an.setText(R.string.str_0);                    bt_br = 0;                }                break;            case R.id.tv_ll_an:                if (tv_ll_an.getText().equals(getString(R.string.str_0))) {                    tv_ll_an.setText(R.string.str_180);                    bt_ll = 1;                } else {                    tv_ll_an.setText(R.string.str_0);                    bt_ll = 0;                }                break;            case R.id.tv_lr_an:                if (tv_lr_an.getText().equals(getString(R.string.str_0))) {                    tv_lr_an.setText(R.string.str_180);                    bt_lr = 1;                } else {                    tv_lr_an.setText(R.string.str_0);                    bt_lr = 0;                }                break;            }            mHandler.removeMessages(1);            mHandler.sendEmptyMessageDelayed(1, MSG_Delay);        }    };    private View.OnClickListener msClickListener = new View.OnClickListener() {        public void onClick(View v) {            if (mBleDevice == null) {                toastOne(getString(R.string.str_main_disconnect));                return;            }            switch (v.getId()) {            case R.id.tv_bl_cm:            case R.id.tv_bl_ms:                dialog.show();                dialog.setData(getString(R.string.str_beforeLeftDL), fl_bl * 34.6F, fl_bl,                        (int) (fl_bl / 10.0F * 200.0F), 0);                break;            case R.id.tv_br_cm:            case R.id.tv_br_ms:                dialog.show();                dialog.setData(getString(R.string.str_beforeRightDL), fl_br * 34.6F, fl_br,                        (int) (fl_br / 10.0F * 200.0F), 1);                break;            case R.id.tv_ll_cm:            case R.id.tv_ll_ms:                dialog.show();                dialog.setData(getString(R.string.str_laterLeftDL), fl_ll * 34.6F, fl_ll,                        (int) (fl_ll / 10.0F * 200.0F), 2);                break;            case R.id.tv_lr_cm:            case R.id.tv_lr_ms:                dialog.show();                dialog.setData(getString(R.string.str_laterRightDL), fl_lr * 34.6F, fl_lr,                        (int) (fl_lr / 10.0F * 200.0F), 3);                break;            }        }    };    private Item_Dialog.OnDialogData onDialogData = new Item_Dialog.OnDialogData() {        public void Data(int progress, float ms, float cm, int tag) {            switch (tag) {            case 0:                tv_bl_ms.setText(getString(R.string.str_ms, ms));                tv_bl_cm.setText(getString(R.string.str_cm, cm));                fl_bl = ms;                progress0 = progress;                break;            case 1:                tv_br_ms.setText(getString(R.string.str_ms, ms));                tv_br_cm.setText(getString(R.string.str_cm, cm));                fl_br = ms;                progress1 = progress;                break;            case 2:                tv_ll_ms.setText(getString(R.string.str_ms, ms));                tv_ll_cm.setText(getString(R.string.str_cm, cm));                fl_ll = ms;                progress2 = progress;                break;            case 3:                tv_lr_ms.setText(getString(R.string.str_ms, new Object[] { Float.valueOf(ms) }));                tv_lr_cm.setText(getString(R.string.str_cm, new Object[] { Float.valueOf(cm) }));                fl_lr = ms;                progress3 = progress;                break;            }            mHandler.removeMessages(MSG_MSDL);            mHandler.sendEmptyMessageDelayed(MSG_MSDL, MSG_Delay);        }    };    private View.OnClickListener tvClickListener = new View.OnClickListener() {        public void onClick(View v) {            setBtnSetect(v);            switch (v.getId()) {            case R.id.tv_p2_topLeft:                img_custom.setVisibility(View.VISIBLE);                drag.setVisibility(View.GONE);                drag.onStop();                setTvEnable(true);                break;            case R.id.tv_p2_topRight:                img_custom.setVisibility(View.GONE);                drag.setVisibility(View.VISIBLE);                setTvEnable(false);                drag.setEnabled(null == mBleDevice ? false : true);                break;            }        }    };    private void initData() {        mainActivity = (MainPager) getActivity();        tv_p2_topLeft.setOnClickListener(tvClickListener);        tv_p2_topRight.setOnClickListener(tvClickListener);        setBtnSetect(tv_p2_topLeft);        tv_bl_an.setOnClickListener(anClickListener);        tv_br_an.setOnClickListener(anClickListener);        tv_ll_an.setOnClickListener(anClickListener);        tv_lr_an.setOnClickListener(anClickListener);        tv_bl_cm.setOnClickListener(msClickListener);        tv_bl_ms.setOnClickListener(msClickListener);        tv_br_cm.setOnClickListener(msClickListener);        tv_br_ms.setOnClickListener(msClickListener);        tv_ll_cm.setOnClickListener(msClickListener);        tv_ll_ms.setOnClickListener(msClickListener);        tv_lr_cm.setOnClickListener(msClickListener);        tv_lr_ms.setOnClickListener(msClickListener);        dialog = new Item_Dialog(getActivity());        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {            dialog.create();        }        dialog.addOnDialogDataListener(onDialogData);        drag.addOnDateChangeListener(new DragView.OnDateChange() {            public void date(float paramAnonymousFloat1, float paramAnonymousFloat2) {//                fl_br = ((1.0F - paramAnonymousFloat1) * 10.0F);//                fl_lr = fl_br;//                //                fl_bl = (10.0F * paramAnonymousFloat1);//                fl_ll = fl_bl;//                tv_bl_ms.setText(getString(R.string.str_ms, fl_bl));//                tv_br_ms.setText(getString(R.string.str_ms, fl_br));//                tv_ll_ms.setText(getString(R.string.str_ms, fl_ll));//                tv_lr_ms.setText(getString(R.string.str_ms, new Object[] { Float.valueOf(fl_lr) }));//                //                tv_bl_cm.setText(getString(R.string.str_cm, fl_bl * 34.6F));//                tv_br_cm.setText(getString(R.string.str_cm, fl_br * 34.6F));//                tv_ll_cm.setText(getString(R.string.str_cm, fl_ll * 34.6F));//                tv_lr_cm.setText(getString(R.string.str_cm, new Object[] { Float.valueOf(fl_lr * 34.6F) }));//                //                mHandler.removeMessages(MSG_MS);//                mHandler.sendEmptyMessageDelayed(MSG_MS, MSG_Delay);            }                        @Override            public void dateLong(float bl, float br, float ll, float lr) {                fl_bl = (bl*10f);                fl_br = (br*10f);                fl_lr = (lr*10f);                fl_ll = (ll*10f);                                tv_bl_ms.setText(getString(R.string.str_ms, fl_bl));                tv_br_ms.setText(getString(R.string.str_ms, fl_br));                tv_ll_ms.setText(getString(R.string.str_ms, fl_ll));                tv_lr_ms.setText(getString(R.string.str_ms, fl_lr));                                tv_bl_cm.setText(getString(R.string.str_cm, fl_bl * 34.6F));                tv_br_cm.setText(getString(R.string.str_cm, fl_br * 34.6F));                tv_ll_cm.setText(getString(R.string.str_cm, fl_ll * 34.6F));                tv_lr_cm.setText(getString(R.string.str_cm, fl_lr * 34.6F));                                mHandler.removeMessages(MSG_MS);                mHandler.sendEmptyMessageDelayed(MSG_MS, MSG_Delay);            }        });    }    private void initView() {        img_custom = ((ImageView) rootView.findViewById(R.id.img_custom));        drag = ((DragView) rootView.findViewById(R.id.dragView));        tv_p2_topLeft = ((TextView) rootView.findViewById(R.id.tv_p2_topLeft));        tv_p2_topRight = ((TextView) rootView.findViewById(R.id.tv_p2_topRight));        tv_bl_name = ((TextView) rootView.findViewById(R.id.tv_bl_name));        tv_bl_ms = ((TextView) rootView.findViewById(R.id.tv_bl_ms));        tv_bl_cm = ((TextView) rootView.findViewById(R.id.tv_bl_cm));        tv_bl_an = ((TextView) rootView.findViewById(R.id.tv_bl_an));        tv_br_name = ((TextView) rootView.findViewById(R.id.tv_br_name));        tv_br_ms = ((TextView) rootView.findViewById(R.id.tv_br_ms));        tv_br_cm = ((TextView) rootView.findViewById(R.id.tv_br_cm));        tv_br_an = ((TextView) rootView.findViewById(R.id.tv_br_an));        tv_ll_name = ((TextView) rootView.findViewById(R.id.tv_ll_name));        tv_ll_ms = ((TextView) rootView.findViewById(R.id.tv_ll_ms));        tv_ll_cm = ((TextView) rootView.findViewById(R.id.tv_ll_cm));        tv_ll_an = ((TextView) rootView.findViewById(R.id.tv_ll_an));        tv_lr_name = ((TextView) rootView.findViewById(R.id.tv_lr_name));        tv_lr_ms = ((TextView) rootView.findViewById(R.id.tv_lr_ms));        tv_lr_cm = ((TextView) rootView.findViewById(R.id.tv_lr_cm));        tv_lr_an = ((TextView) rootView.findViewById(R.id.tv_lr_an));    }    private void setBtnSetect(View paramView) {        tv_p2_topLeft.setSelected(false);        tv_p2_topRight.setSelected(false);        paramView.setSelected(true);    }        private void setTvEnable(boolean bool) {        tv_bl_cm.setEnabled(bool);        tv_bl_ms.setEnabled(bool);        tv_br_cm.setEnabled(bool);        tv_br_ms.setEnabled(bool);        tv_ll_cm.setEnabled(bool);        tv_ll_ms.setEnabled(bool);        tv_lr_cm.setEnabled(bool);        tv_lr_ms.setEnabled(bool);    }    private void toastOne(String str) {        if (mToast != null) {            mToast.setText(str);        } else {            mToast = Toast.makeText(getActivity(), str, Toast.LENGTH_SHORT);        }        mToast.show();    }        @Override    public View onCreateView(LayoutInflater paramLayoutInflater, ViewGroup paramViewGroup, Bundle paramBundle) {        rootView = paramLayoutInflater.inflate(R.layout.fragment2, paramViewGroup, false);        initView();        initData();        getBleData();        return rootView;    }        @Override    public void onHiddenChanged(boolean hidden) {        if (!hidden) {            getBleData();            drag.setEnabled(null == mBleDevice ? false : true);        }        drag.onStop();    }        @Override    public void onStop() {        drag.onStop();        super.onStop();    }}